services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dictionary
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d dictionary']
      interval: 5s
      timeout: 5s
      retries: 30

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 30

  api:
    build:
      context: .
    environment:
      PORT: 3000
      JWT_SECRET: supersecret
      JWT_EXPIRES: 7d
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DB: dictionary
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_TTL_SECONDS: 86400
      WORDLIST_URL: https://raw.githubusercontent.com/meetDeveloper/freeDictionaryAPI/master/meta/wordList/english.txt
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '3000:3000'
    command: sh -c "node scripts/migrate.js && node dist/src/main.js"
    restart: unless-stopped

  seed:
    build:
      context: .
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DB: dictionary
      WORDLIST_URL: https://raw.githubusercontent.com/meetDeveloper/freeDictionaryAPI/master/meta/wordList/english.txt
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_started
    command: sh -c "node scripts/migrate.js && node dist/entries/seed-words.js"
    restart: 'no'

volumes:
  pgdata:
